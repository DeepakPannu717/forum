{"ast":null,"code":"var _jsxFileName = \"/home/deepak/TECH STACK/PYTHON/forum/client/src/components/Sidebar.js\",\n  _s = $RefreshSig$();\n// // src/components/Sidebar.js\n// import React from \"react\";\n// import { ListGroup } from \"react-bootstrap\";\n\n// export default function Sidebar({ categories, onSelectCategory }) {\n//   return (\n//     <div>\n//       <h5>Categories</h5>\n//       <ListGroup>\n//         {categories.map((cat) => (\n//           <ListGroup.Item\n//             action\n//             key={cat._id}\n//             onClick={() => onSelectCategory(cat)}\n//           >\n//             {cat.name}\n//           </ListGroup.Item>\n//         ))}\n//       </ListGroup>\n//     </div>\n//   );\n// }\n\n// src/components/Sidebar.js\n// ...existing code...\n// import React from \"react\";\n// import { Accordion, ListGroup } from \"react-bootstrap\";\n\n// export default function Sidebar({ categories = [], onSelectCategory, onSelectTopic }) {\n//   return (\n//     <div className=\"p-3 bg-light\" style={{ height: \"100vh\", overflowY: \"auto\" }}>\n//       <h5>Categories</h5>\n\n//       <Accordion>\n//         {categories.map((category, idx) => (\n//           <Accordion.Item eventKey={String(idx)} key={category._id || idx}>\n//             <Accordion.Header\n//               // call onSelectCategory when header is clicked (optional)\n//               onClick={() => onSelectCategory && onSelectCategory(category)}\n//             >\n//               {category.name}\n//             </Accordion.Header>\n\n//             <Accordion.Body>\n//               <ListGroup variant=\"flush\">\n//                 {(category.topics ?? []).length === 0 && (\n//                   <ListGroup.Item className=\"text-muted\">No topics</ListGroup.Item>\n//                 )}\n\n//                 {(category.topics ?? []).map((topic) => (\n//                   <ListGroup.Item\n//                     action\n//                     key={topic._id}\n//                     onClick={() => onSelectTopic && onSelectTopic(topic, category)}\n//                     style={{ cursor: \"pointer\" }}\n//                   >\n//                     {topic.name}\n//                   </ListGroup.Item>\n//                 ))}\n//               </ListGroup>\n//             </Accordion.Body>\n//           </Accordion.Item>\n//         ))}\n//       </Accordion>\n//     </div>\n//   );\n// }\n// ...existing code...\n// ...existing code...\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Accordion, ListGroup } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar({\n  categories = [],\n  onSelectCategory,\n  onSelectTopic\n}) {\n  _s();\n  const sidebarRef = useRef(null);\n  const dragState = useRef({\n    startX: 0,\n    startWidth: 0,\n    dragging: false\n  });\n  const [width, setWidth] = useState(280); // default width\n  const minWidth = 80;\n  const maxWidth = 800;\n  useEffect(() => {\n    function onMove(e) {\n      if (!dragState.current.dragging) return;\n      const dx = e.clientX - dragState.current.startX;\n      const newW = Math.min(maxWidth, Math.max(minWidth, dragState.current.startWidth + dx));\n      setWidth(newW);\n    }\n    function onUp() {\n      dragState.current.dragging = false;\n      window.removeEventListener(\"mousemove\", onMove);\n      window.removeEventListener(\"mouseup\", onUp);\n    }\n    if (dragState.current.dragging) {\n      window.addEventListener(\"mousemove\", onMove);\n      window.addEventListener(\"mouseup\", onUp);\n    }\n    return () => {\n      window.removeEventListener(\"mousemove\", onMove);\n      window.removeEventListener(\"mouseup\", onUp);\n    };\n  }, []);\n  function startDrag(e) {\n    e.preventDefault();\n    dragState.current = {\n      dragging: true,\n      startX: e.clientX,\n      startWidth: width\n    };\n  }\n  function measureAutoWidth() {\n    // measure using canvas for accurate width using sidebar font\n    const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    const comp = sidebarRef.current ? window.getComputedStyle(sidebarRef.current) : null;\n    ctx.font = comp ? `${comp.fontSize} ${comp.fontFamily}` : \"16px Arial\";\n    let maxTextW = 0;\n    const check = s => {\n      if (!s) return;\n      const m = ctx.measureText(s).width;\n      if (m > maxTextW) maxTextW = m;\n    };\n    categories.forEach(c => {\n      check(c.name);\n      (c.topics || []).forEach(t => check(t.name));\n    });\n\n    // add padding + room for resizer\n    const padding = 32; // left/right padding + icons\n    const resizerSpace = 10;\n    const target = Math.min(maxWidth, Math.max(minWidth, Math.ceil(maxTextW + padding + resizerSpace)));\n    return target;\n  }\n  function autoFit() {\n    const w = measureAutoWidth();\n    setWidth(w);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: sidebarRef,\n    className: \"p-3 bg-light\",\n    style: {\n      height: \"100vh\",\n      overflowY: \"auto\",\n      width: width,\n      minWidth: minWidth,\n      maxWidth: maxWidth,\n      transition: \"width 200ms ease\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        style: {\n          margin: 0\n        },\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        title: \"Auto-fit width (double-click resizer)\",\n        onClick: autoFit,\n        style: {\n          border: \"none\",\n          background: \"transparent\",\n          padding: \"4px 8px\",\n          cursor: \"pointer\",\n          color: \"#0d6efd\"\n        },\n        children: \"Auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      children: categories.map((category, idx) => {\n        var _category$topics, _category$topics2;\n        return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          eventKey: String(idx),\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n            onClick: () => onSelectCategory && onSelectCategory(category),\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: [((_category$topics = category.topics) !== null && _category$topics !== void 0 ? _category$topics : []).length === 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                className: \"text-muted\",\n                children: \"No topics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), ((_category$topics2 = category.topics) !== null && _category$topics2 !== void 0 ? _category$topics2 : []).map(topic => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                action: true,\n                onClick: () => onSelectTopic && onSelectTopic(topic, category),\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: topic.name\n              }, topic._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, category._id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseDown: startDrag,\n      onDoubleClick: autoFit,\n      title: \"Drag to resize / double-click to auto-fit\",\n      style: {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        width: 8,\n        height: \"100%\",\n        cursor: \"ew-resize\",\n        background: \"transparent\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          right: 1,\n          top: \"50%\",\n          transform: \"translateY(-50%)\",\n          width: 4,\n          height: 40,\n          background: \"rgba(0,0,0,0.08)\",\n          borderRadius: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n// ...existing code...\n_s(Sidebar, \"by3XBfBCVZxf61vK0hGF/zvlnyI=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Accordion","ListGroup","jsxDEV","_jsxDEV","Sidebar","categories","onSelectCategory","onSelectTopic","_s","sidebarRef","dragState","startX","startWidth","dragging","width","setWidth","minWidth","maxWidth","onMove","e","current","dx","clientX","newW","Math","min","max","onUp","window","removeEventListener","addEventListener","startDrag","preventDefault","measureAutoWidth","ctx","document","createElement","getContext","comp","getComputedStyle","font","fontSize","fontFamily","maxTextW","check","s","m","measureText","forEach","c","name","topics","t","padding","resizerSpace","target","ceil","autoFit","w","ref","className","style","height","overflowY","transition","position","children","display","alignItems","justifyContent","margin","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","border","background","cursor","color","map","category","idx","_category$topics","_category$topics2","Item","eventKey","String","Header","Body","variant","length","topic","action","_id","onMouseDown","onDoubleClick","top","right","transform","borderRadius","_c","$RefreshReg$"],"sources":["/home/deepak/TECH STACK/PYTHON/forum/client/src/components/Sidebar.js"],"sourcesContent":["// // src/components/Sidebar.js\n// import React from \"react\";\n// import { ListGroup } from \"react-bootstrap\";\n\n// export default function Sidebar({ categories, onSelectCategory }) {\n//   return (\n//     <div>\n//       <h5>Categories</h5>\n//       <ListGroup>\n//         {categories.map((cat) => (\n//           <ListGroup.Item\n//             action\n//             key={cat._id}\n//             onClick={() => onSelectCategory(cat)}\n//           >\n//             {cat.name}\n//           </ListGroup.Item>\n//         ))}\n//       </ListGroup>\n//     </div>\n//   );\n// }\n\n\n// src/components/Sidebar.js\n// ...existing code...\n// import React from \"react\";\n// import { Accordion, ListGroup } from \"react-bootstrap\";\n\n// export default function Sidebar({ categories = [], onSelectCategory, onSelectTopic }) {\n//   return (\n//     <div className=\"p-3 bg-light\" style={{ height: \"100vh\", overflowY: \"auto\" }}>\n//       <h5>Categories</h5>\n\n//       <Accordion>\n//         {categories.map((category, idx) => (\n//           <Accordion.Item eventKey={String(idx)} key={category._id || idx}>\n//             <Accordion.Header\n//               // call onSelectCategory when header is clicked (optional)\n//               onClick={() => onSelectCategory && onSelectCategory(category)}\n//             >\n//               {category.name}\n//             </Accordion.Header>\n\n//             <Accordion.Body>\n//               <ListGroup variant=\"flush\">\n//                 {(category.topics ?? []).length === 0 && (\n//                   <ListGroup.Item className=\"text-muted\">No topics</ListGroup.Item>\n//                 )}\n\n//                 {(category.topics ?? []).map((topic) => (\n//                   <ListGroup.Item\n//                     action\n//                     key={topic._id}\n//                     onClick={() => onSelectTopic && onSelectTopic(topic, category)}\n//                     style={{ cursor: \"pointer\" }}\n//                   >\n//                     {topic.name}\n//                   </ListGroup.Item>\n//                 ))}\n//               </ListGroup>\n//             </Accordion.Body>\n//           </Accordion.Item>\n//         ))}\n//       </Accordion>\n//     </div>\n//   );\n// }\n// ...existing code...\n// ...existing code...\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Accordion, ListGroup } from \"react-bootstrap\";\n\nexport default function Sidebar({ categories = [], onSelectCategory, onSelectTopic }) {\n  const sidebarRef = useRef(null);\n  const dragState = useRef({ startX: 0, startWidth: 0, dragging: false });\n  const [width, setWidth] = useState(280); // default width\n  const minWidth = 80;\n  const maxWidth = 800;\n\n  useEffect(() => {\n    function onMove(e) {\n      if (!dragState.current.dragging) return;\n      const dx = e.clientX - dragState.current.startX;\n      const newW = Math.min(maxWidth, Math.max(minWidth, dragState.current.startWidth + dx));\n      setWidth(newW);\n    }\n    function onUp() {\n      dragState.current.dragging = false;\n      window.removeEventListener(\"mousemove\", onMove);\n      window.removeEventListener(\"mouseup\", onUp);\n    }\n    if (dragState.current.dragging) {\n      window.addEventListener(\"mousemove\", onMove);\n      window.addEventListener(\"mouseup\", onUp);\n    }\n    return () => {\n      window.removeEventListener(\"mousemove\", onMove);\n      window.removeEventListener(\"mouseup\", onUp);\n    };\n  }, []);\n\n  function startDrag(e) {\n    e.preventDefault();\n    dragState.current = { dragging: true, startX: e.clientX, startWidth: width };\n  }\n\n  function measureAutoWidth() {\n    // measure using canvas for accurate width using sidebar font\n    const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    const comp = sidebarRef.current ? window.getComputedStyle(sidebarRef.current) : null;\n    ctx.font = comp ? `${comp.fontSize} ${comp.fontFamily}` : \"16px Arial\";\n\n    let maxTextW = 0;\n    const check = (s) => {\n      if (!s) return;\n      const m = ctx.measureText(s).width;\n      if (m > maxTextW) maxTextW = m;\n    };\n\n    categories.forEach((c) => {\n      check(c.name);\n      (c.topics || []).forEach((t) => check(t.name));\n    });\n\n    // add padding + room for resizer\n    const padding = 32; // left/right padding + icons\n    const resizerSpace = 10;\n    const target = Math.min(maxWidth, Math.max(minWidth, Math.ceil(maxTextW + padding + resizerSpace)));\n    return target;\n  }\n\n  function autoFit() {\n    const w = measureAutoWidth();\n    setWidth(w);\n  }\n\n  return (\n    <div\n      ref={sidebarRef}\n      className=\"p-3 bg-light\"\n      style={{\n        height: \"100vh\",\n        overflowY: \"auto\",\n        width: width,\n        minWidth: minWidth,\n        maxWidth: maxWidth,\n        transition: \"width 200ms ease\",\n        position: \"relative\",\n      }}\n    >\n      <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }}>\n        <h5 style={{ margin: 0 }}>Categories</h5>\n        <button\n          title=\"Auto-fit width (double-click resizer)\"\n          onClick={autoFit}\n          style={{\n            border: \"none\",\n            background: \"transparent\",\n            padding: \"4px 8px\",\n            cursor: \"pointer\",\n            color: \"#0d6efd\",\n          }}\n        >\n          Auto\n        </button>\n      </div>\n\n      <Accordion>\n        {categories.map((category, idx) => (\n          <Accordion.Item eventKey={String(idx)} key={category._id || idx}>\n            <Accordion.Header onClick={() => onSelectCategory && onSelectCategory(category)}>\n              {category.name}\n            </Accordion.Header>\n\n            <Accordion.Body>\n              <ListGroup variant=\"flush\">\n                {(category.topics ?? []).length === 0 && (\n                  <ListGroup.Item className=\"text-muted\">No topics</ListGroup.Item>\n                )}\n\n                {(category.topics ?? []).map((topic) => (\n                  <ListGroup.Item\n                    action\n                    key={topic._id}\n                    onClick={() => onSelectTopic && onSelectTopic(topic, category)}\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    {topic.name}\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </Accordion.Body>\n          </Accordion.Item>\n        ))}\n      </Accordion>\n\n      {/* resizer bar */}\n      <div\n        onMouseDown={startDrag}\n        onDoubleClick={autoFit}\n        title=\"Drag to resize / double-click to auto-fit\"\n        style={{\n          position: \"absolute\",\n          top: 0,\n          right: 0,\n          width: 8,\n          height: \"100%\",\n          cursor: \"ew-resize\",\n          background: \"transparent\",\n        }}\n      >\n        {/* visible handle */}\n        <div\n          style={{\n            position: \"absolute\",\n            right: 1,\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            width: 4,\n            height: 40,\n            background: \"rgba(0,0,0,0.08)\",\n            borderRadius: 2,\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n// ...existing code..."],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}