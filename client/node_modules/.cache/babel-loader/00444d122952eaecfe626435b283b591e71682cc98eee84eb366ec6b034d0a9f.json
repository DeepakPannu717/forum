{"ast":null,"code":"var _jsxFileName = \"/home/deepak/TECH STACK/PYTHON/forum-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport AddModal from './components/AddModal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(null); // 'category' | 'topic' | 'list'\n\n  const handleAdd = type => {\n    setModalType(type);\n    setShowModal(true);\n  };\n  const handleSubmit = async data => {\n    let url = '';\n    if (modalType === 'category') {\n      url = 'http://localhost:5000/category';\n    } else if (modalType === 'topic') {\n      url = 'http://localhost:5000/topic';\n    } else if (modalType === 'list') {\n      url = 'http://localhost:5000/list';\n    }\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await response.json();\n      console.log(`${modalType} added:`, result);\n      setShowModal(false);\n    } catch (error) {\n      console.error(`Error adding ${modalType}:`, error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(AddModal, {\n      type: modalType,\n      onAdd: handleSubmit,\n      onClose: () => setShowModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Qp5vb2jcwSSqkKHSjZEhfahBaMo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","AddModal","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","showModal","setShowModal","modalType","setModalType","handleAdd","type","handleSubmit","data","url","response","fetch","method","headers","body","JSON","stringify","result","json","console","log","error","children","onAdd","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["/home/deepak/TECH STACK/PYTHON/forum-app/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from './components/Header';\nimport AddModal from './components/AddModal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(null); // 'category' | 'topic' | 'list'\n\n  const handleAdd = (type) => {\n    setModalType(type);\n    setShowModal(true);\n  };\n\n  const handleSubmit = async (data) => {\n    let url = '';\n\n    if (modalType === 'category') {\n      url = 'http://localhost:5000/category';\n    } else if (modalType === 'topic') {\n      url = 'http://localhost:5000/topic';\n    } else if (modalType === 'list') {\n      url = 'http://localhost:5000/list';\n    }\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      });\n\n      const result = await response.json();\n      console.log(`${modalType} added:`, result);\n\n      setShowModal(false);\n    } catch (error) {\n      console.error(`Error adding ${modalType}:`, error);\n    }\n  };\n\n  return (\n    <>\n      <Header onAdd={handleAdd} />\n\n      {showModal && (\n        <AddModal\n          type={modalType}\n          onAdd={handleSubmit}\n          onClose={() => setShowModal(false)}\n        />\n      )}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAElD,MAAMa,SAAS,GAAIC,IAAI,IAAK;IAC1BF,YAAY,CAACE,IAAI,CAAC;IAClBJ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMK,YAAY,GAAG,MAAOC,IAAI,IAAK;IACnC,IAAIC,GAAG,GAAG,EAAE;IAEZ,IAAIN,SAAS,KAAK,UAAU,EAAE;MAC5BM,GAAG,GAAG,gCAAgC;IACxC,CAAC,MAAM,IAAIN,SAAS,KAAK,OAAO,EAAE;MAChCM,GAAG,GAAG,6BAA6B;IACrC,CAAC,MAAM,IAAIN,SAAS,KAAK,MAAM,EAAE;MAC/BM,GAAG,GAAG,4BAA4B;IACpC;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;QAChCG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;MAC3B,CAAC,CAAC;MAEF,MAAMS,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,GAAGjB,SAAS,SAAS,EAAEc,MAAM,CAAC;MAE1Cf,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,gBAAgBlB,SAAS,GAAG,EAAEkB,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACEzB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACE1B,OAAA,CAACH,MAAM;MAAC8B,KAAK,EAAElB;IAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE3B1B,SAAS,iBACRL,OAAA,CAACF,QAAQ;MACPY,IAAI,EAAEH,SAAU;MAChBoB,KAAK,EAAEhB,YAAa;MACpBqB,OAAO,EAAEA,CAAA,KAAM1B,YAAY,CAAC,KAAK;IAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACF;EAAA,eACD,CAAC;AAEP;AAAC3B,EAAA,CAjDQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}