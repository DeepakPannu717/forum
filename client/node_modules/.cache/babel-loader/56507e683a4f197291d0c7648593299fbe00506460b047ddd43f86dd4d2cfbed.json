{"ast":null,"code":"var _jsxFileName = \"/home/deepak/TECH STACK/PYTHON/forum/client/src/components/AddModal.js\",\n  _s = $RefreshSig$();\n// // src/components/AddModal.js\n// import React, { useState, useEffect, useRef } from \"react\";\n// import { Modal, Button, Form } from \"react-bootstrap\";\n// import Editor from \"react-simple-code-editor\";\n// import Prism from \"prismjs\";\n// import \"prismjs/themes/prism-tomorrow.css\";\n// import \"prismjs/components/prism-javascript\";\n// import \"prismjs/components/prism-python\";\n\n// export default function AddModal({ type, onAdd, onClose, categories = [] }) {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     categoryId: \"\",\n//     codebase: \"\",\n//     output: \"\",\n//     status: \"active\",\n//   });\n//   const [language, setLanguage] = useState(\"javascript\");\n//   const [errors, setErrors] = useState({});\n//   const inputRef = useRef(null);\n\n//   useEffect(() => {\n//     if (inputRef.current) inputRef.current.focus();\n//   }, []);\n\n//   const validate = () => {\n//     const newErrors = {};\n//     if (!formData.name.trim()) newErrors.name = \"Name is required\";\n//     if (type === \"topic\" && !formData.categoryId)\n//       newErrors.categoryId = \"Category is required\";\n//     setErrors(newErrors);\n//     return Object.keys(newErrors).length === 0;\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const highlightCode = (code) =>\n//     Prism.highlight(code, Prism.languages[language], language);\n\n//   const handleSubmit = () => {\n//     if (!validate()) return;\n//     const payload =\n//       type === \"topic\"\n//         ? {\n//             name: formData.name,\n//             categoryId: formData.categoryId,\n//             codebase: formData.codebase,\n//             output: formData.output,\n//             status: formData.status,\n//             language,\n//           }\n//         : { name: formData.name };\n\n//     onAdd(payload);\n//   };\n\n//   return (\n//     <Modal show onHide={onClose} size=\"lg\" scrollable>\n//       <Modal.Header closeButton>\n//         <Modal.Title>Add {type}</Modal.Title>\n//       </Modal.Header>\n//       <Modal.Body>\n//         <Form>\n//           <Form.Group className=\"mb-3\">\n//             <Form.Label>{type} Name</Form.Label>\n//             <Form.Control\n//               ref={inputRef}\n//               type=\"text\"\n//               name=\"name\"\n//               value={formData.name}\n//               onChange={handleChange}\n//               isInvalid={!!errors.name}\n//               placeholder={`Enter ${type} name`}\n//             />\n//             <Form.Control.Feedback type=\"invalid\">\n//               {errors.name}\n//             </Form.Control.Feedback>\n//           </Form.Group>\n\n//           {type === \"topic\" && (\n//             <>\n//               <Form.Group className=\"mb-3\">\n//                 <Form.Label>Category</Form.Label>\n//                 <Form.Select\n//                   name=\"categoryId\"\n//                   value={formData.categoryId}\n//                   onChange={handleChange}\n//                   isInvalid={!!errors.categoryId}\n//                 >\n//                   <option value=\"\">Select Category</option>\n//                   {categories.map((cat) => (\n//                     <option key={cat._id} value={cat._id}>\n//                       {cat.name}\n//                     </option>\n//                   ))}\n//                 </Form.Select>\n//                 <Form.Control.Feedback type=\"invalid\">\n//                   {errors.categoryId}\n//                 </Form.Control.Feedback>\n//               </Form.Group>\n\n//               <Form.Group className=\"mb-3\">\n//                 <Form.Label>Language</Form.Label>\n//                 <Form.Select\n//                   name=\"language\"\n//                   value={language}\n//                   onChange={(e) => setLanguage(e.target.value)}\n//                 >\n//                   <option value=\"javascript\">JavaScript</option>\n//                   <option value=\"python\">Python</option>\n//                   <option value=\"react\">React</option>\n//                   <option value=\"node\">Node</option>\n//                 </Form.Select>\n//               </Form.Group>\n\n//               <Form.Group className=\"mb-3\">\n//                 <Form.Label>Codebase</Form.Label>\n//                 <div\n//                   style={{\n//                     border: \"1px solid #ced4da\",\n//                     borderRadius: \"0.25rem\",\n//                     minHeight: \"150px\",\n//                     fontFamily: \"monospace\",\n//                     fontSize: 14,\n//                     padding: \"10px\",\n//                     backgroundColor: \"#2d2d2d\",\n//                     color: \"#ccc\",\n//                   }}\n//                 >\n//                   <Editor\n//                     value={formData.codebase}\n//                     onValueChange={(codebase) =>\n//                       setFormData((prev) => ({ ...prev, codebase }))\n//                     }\n//                     highlight={highlightCode}\n//                     padding={10}\n//                     style={{\n//                       fontFamily: '\"Fira code\", monospace',\n//                       fontSize: 14,\n//                       outline: 0,\n//                       minHeight: 140,\n//                     }}\n//                   />\n//                 </div>\n//               </Form.Group>\n\n//               <Form.Group className=\"mb-3\">\n//                 <Form.Label>Output</Form.Label>\n//                 <Form.Control\n//                   as=\"textarea\"\n//                   name=\"output\"\n//                   rows={2}\n//                   value={formData.output}\n//                   onChange={handleChange}\n//                 />\n//               </Form.Group>\n\n//               <Form.Group className=\"mb-3\">\n//                 <Form.Label>Status</Form.Label>\n//                 <Form.Select\n//                   name=\"status\"\n//                   value={formData.status}\n//                   onChange={handleChange}\n//                 >\n//                   <option value=\"active\">Active</option>\n//                   <option value=\"inactive\">Inactive</option>\n//                 </Form.Select>\n//               </Form.Group>\n//             </>\n//           )}\n//         </Form>\n//       </Modal.Body>\n//       <Modal.Footer>\n//         <Button variant=\"secondary\" onClick={onClose}>\n//           Cancel\n//         </Button>\n//         <Button variant=\"primary\" onClick={handleSubmit}>\n//           Add\n//         </Button>\n//       </Modal.Footer>\n//     </Modal>\n//   );\n// }\n\n// // src/components/AddModal.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport Editor from \"react-simple-code-editor\";\nimport Prism from \"prismjs\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport \"prismjs/components/prism-javascript\";\nimport \"prismjs/components/prism-python\";\n\n// ...existing code...\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddModal({\n  type,\n  onAdd,\n  onClose,\n  categories = []\n}) {\n  _s();\n  var _categories$find, _categories$find$subc;\n  const [formData, setFormData] = useState({\n    name: \"\",\n    categoryId: \"\",\n    subcategoryId: \"\",\n    // <-- add this\n    codebase: \"\",\n    output: \"\",\n    status: \"active\"\n  });\n  const [language, setLanguage] = useState(\"javascript\");\n  const [errors, setErrors] = useState({});\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (inputRef.current) inputRef.current.focus();\n  }, []);\n  const validate = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) newErrors.name = \"Name is required\";\n    if (type === \"topic\" && !formData.categoryId) newErrors.categoryId = \"Category is required\";\n    if (type === \"topic\" && !formData.subcategoryId) newErrors.subcategoryId = \"Subcategory is required\";\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // ...existing code...\n\n  const handleSubmit = () => {\n    if (!validate()) return;\n    const payload = type === \"topic\" ? {\n      name: formData.name,\n      categoryId: formData.categoryId,\n      subcategoryId: formData.subcategoryId,\n      // <-- add this\n      codebase: formData.codebase,\n      output: formData.output,\n      status: formData.status,\n      language\n    } : {\n      name: formData.name\n    };\n    onAdd(payload);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: true,\n    onHide: onClose,\n    size: \"lg\",\n    scrollable: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: [\"Add \", type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: [type, \" Name\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            ref: inputRef,\n            type: \"text\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleChange,\n            isInvalid: !!errors.name,\n            placeholder: `Enter ${type} name`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), type === \"topic\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"categoryId\",\n              value: formData.categoryId,\n              onChange: handleChange,\n              isInvalid: !!errors.categoryId,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: cat._id,\n                children: cat.name\n              }, cat._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.categoryId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Subcategory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"subcategoryId\",\n              value: formData.subcategoryId,\n              onChange: handleChange,\n              isInvalid: !!errors.subcategoryId,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Subcategory\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this), (_categories$find = categories.find(cat => cat._id === formData.categoryId)) === null || _categories$find === void 0 ? void 0 : (_categories$find$subc = _categories$find.subcategories) === null || _categories$find$subc === void 0 ? void 0 : _categories$find$subc.map(sub => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: sub._id,\n                children: sub.name\n              }, sub._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.subcategoryId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Language\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"language\",\n              value: language,\n              onChange: e => setLanguage(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"javascript\",\n                children: \"JavaScript\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"python\",\n                children: \"Python\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"react\",\n                children: \"React\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"node\",\n                children: \"Node\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Codebase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                border: \"1px solid #ced4da\",\n                borderRadius: \"0.25rem\",\n                minHeight: \"150px\",\n                fontFamily: \"monospace\",\n                fontSize: 14,\n                padding: \"10px\",\n                backgroundColor: \"#2d2d2d\",\n                color: \"#ccc\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Editor, {\n                value: formData.codebase,\n                onValueChange: codebase => setFormData(prev => ({\n                  ...prev,\n                  codebase\n                })),\n                highlight: highlightCode,\n                padding: 10,\n                style: {\n                  fontFamily: '\"Fira code\", monospace',\n                  fontSize: 14,\n                  outline: 0,\n                  minHeight: 140\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Output\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              name: \"output\",\n              rows: 2,\n              value: formData.output,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"status\",\n              value: formData.status,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"active\",\n                children: \"Active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"inactive\",\n                children: \"Inactive\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleSubmit,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n}\n// ...existing code...\n_s(AddModal, \"AZnf9hjZKM/jF5wlOTZCH6gyG6k=\");\n_c = AddModal;\nvar _c;\n$RefreshReg$(_c, \"AddModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Modal","Button","Form","Editor","Prism","jsxDEV","_jsxDEV","Fragment","_Fragment","AddModal","type","onAdd","onClose","categories","_s","_categories$find","_categories$find$subc","formData","setFormData","name","categoryId","subcategoryId","codebase","output","status","language","setLanguage","errors","setErrors","inputRef","current","focus","validate","newErrors","trim","Object","keys","length","handleChange","e","value","target","prev","handleSubmit","payload","show","onHide","size","scrollable","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Group","className","Label","Control","ref","onChange","isInvalid","placeholder","Feedback","Select","map","cat","_id","find","subcategories","sub","style","border","borderRadius","minHeight","fontFamily","fontSize","padding","backgroundColor","color","onValueChange","highlight","highlightCode","outline","as","rows","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/home/deepak/TECH STACK/PYTHON/forum/client/src/components/AddModal.js"],"sourcesContent":["// // src/components/AddModal.js\n// import React, { useState, useEffect, useRef } from \"react\";\n// import { Modal, Button, Form } from \"react-bootstrap\";\n// import Editor from \"react-simple-code-editor\";\n// import Prism from \"prismjs\";\n// import \"prismjs/themes/prism-tomorrow.css\";\n// import \"prismjs/components/prism-javascript\";\n// import \"prismjs/components/prism-python\";\n\n// export default function AddModal({ type, onAdd, onClose, categories = [] }) {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     categoryId: \"\",\n//     codebase: \"\",\n//     output: \"\",\n//     status: \"active\",\n//   });\n//   const [language, setLanguage] = useState(\"javascript\");\n//   const [errors, setErrors] = useState({});\n//   const inputRef = useRef(null);\n\n//   useEffect(() => {\n//     if (inputRef.current) inputRef.current.focus();\n//   }, []);\n\n//   const validate = () => {\n//     const newErrors = {};\n//     if (!formData.name.trim()) newErrors.name = \"Name is required\";\n//     if (type === \"topic\" && !formData.categoryId)\n//       newErrors.categoryId = \"Category is required\";\n//     setErrors(newErrors);\n//     return Object.keys(newErrors).length === 0;\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const highlightCode = (code) =>\n//     Prism.highlight(code, Prism.languages[language], language);\n\n//   const handleSubmit = () => {\n//     if (!validate()) return;\n//     const payload =\n//       type === \"topic\"\n//         ? {\n//             name: formData.name,\n//             categoryId: formData.categoryId,\n//             codebase: formData.codebase,\n//             output: formData.output,\n//             status: formData.status,\n//             language,\n//           }\n//         : { name: formData.name };\n\n//     onAdd(payload);\n//   };\n\n//   return (\n//     <Modal show onHide={onClose} size=\"lg\" scrollable>\n//       <Modal.Header closeButton>\n//         <Modal.Title>Add {type}</Modal.Title>\n//       </Modal.Header>\n//       <Modal.Body>\n//         <Form>\n//           <Form.Group className=\"mb-3\">\n//             <Form.Label>{type} Name</Form.Label>\n//             <Form.Control\n//               ref={inputRef}\n//               type=\"text\"\n//               name=\"name\"\n//               value={formData.name}\n//               onChange={handleChange}\n//               isInvalid={!!errors.name}\n//               placeholder={`Enter ${type} name`}\n//             />\n//             <Form.Control.Feedback type=\"invalid\">\n//               {errors.name}\n//             </Form.Control.Feedback>\n//           </Form.Group>\n\n//           {type === \"topic\" && (\n//             <>\n//               <Form.Group className=\"mb-3\">\n//                 <Form.Label>Category</Form.Label>\n//                 <Form.Select\n//                   name=\"categoryId\"\n//                   value={formData.categoryId}\n//                   onChange={handleChange}\n//                   isInvalid={!!errors.categoryId}\n//                 >\n//                   <option value=\"\">Select Category</option>\n//                   {categories.map((cat) => (\n//                     <option key={cat._id} value={cat._id}>\n//                       {cat.name}\n//                     </option>\n//                   ))}\n//                 </Form.Select>\n//                 <Form.Control.Feedback type=\"invalid\">\n//                   {errors.categoryId}\n//                 </Form.Control.Feedback>\n//               </Form.Group>\n\n//               <Form.Group className=\"mb-3\">\n//                 <Form.Label>Language</Form.Label>\n//                 <Form.Select\n//                   name=\"language\"\n//                   value={language}\n//                   onChange={(e) => setLanguage(e.target.value)}\n//                 >\n//                   <option value=\"javascript\">JavaScript</option>\n//                   <option value=\"python\">Python</option>\n//                   <option value=\"react\">React</option>\n//                   <option value=\"node\">Node</option>\n//                 </Form.Select>\n//               </Form.Group>\n\n//               <Form.Group className=\"mb-3\">\n//                 <Form.Label>Codebase</Form.Label>\n//                 <div\n//                   style={{\n//                     border: \"1px solid #ced4da\",\n//                     borderRadius: \"0.25rem\",\n//                     minHeight: \"150px\",\n//                     fontFamily: \"monospace\",\n//                     fontSize: 14,\n//                     padding: \"10px\",\n//                     backgroundColor: \"#2d2d2d\",\n//                     color: \"#ccc\",\n//                   }}\n//                 >\n//                   <Editor\n//                     value={formData.codebase}\n//                     onValueChange={(codebase) =>\n//                       setFormData((prev) => ({ ...prev, codebase }))\n//                     }\n//                     highlight={highlightCode}\n//                     padding={10}\n//                     style={{\n//                       fontFamily: '\"Fira code\", monospace',\n//                       fontSize: 14,\n//                       outline: 0,\n//                       minHeight: 140,\n//                     }}\n//                   />\n//                 </div>\n//               </Form.Group>\n\n//               <Form.Group className=\"mb-3\">\n//                 <Form.Label>Output</Form.Label>\n//                 <Form.Control\n//                   as=\"textarea\"\n//                   name=\"output\"\n//                   rows={2}\n//                   value={formData.output}\n//                   onChange={handleChange}\n//                 />\n//               </Form.Group>\n\n//               <Form.Group className=\"mb-3\">\n//                 <Form.Label>Status</Form.Label>\n//                 <Form.Select\n//                   name=\"status\"\n//                   value={formData.status}\n//                   onChange={handleChange}\n//                 >\n//                   <option value=\"active\">Active</option>\n//                   <option value=\"inactive\">Inactive</option>\n//                 </Form.Select>\n//               </Form.Group>\n//             </>\n//           )}\n//         </Form>\n//       </Modal.Body>\n//       <Modal.Footer>\n//         <Button variant=\"secondary\" onClick={onClose}>\n//           Cancel\n//         </Button>\n//         <Button variant=\"primary\" onClick={handleSubmit}>\n//           Add\n//         </Button>\n//       </Modal.Footer>\n//     </Modal>\n//   );\n// }\n\n// // src/components/AddModal.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport Editor from \"react-simple-code-editor\";\nimport Prism from \"prismjs\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport \"prismjs/components/prism-javascript\";\nimport \"prismjs/components/prism-python\";\n\n// ...existing code...\nexport default function AddModal({ type, onAdd, onClose, categories = [] }) {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    categoryId: \"\",\n    subcategoryId: \"\", // <-- add this\n    codebase: \"\",\n    output: \"\",\n    status: \"active\",\n  });\n  const [language, setLanguage] = useState(\"javascript\");\n  const [errors, setErrors] = useState({});\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    if (inputRef.current) inputRef.current.focus();\n  }, []);\n\n  const validate = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) newErrors.name = \"Name is required\";\n    if (type === \"topic\" && !formData.categoryId)\n      newErrors.categoryId = \"Category is required\";\n    if (type === \"topic\" && !formData.subcategoryId)\n      newErrors.subcategoryId = \"Subcategory is required\";\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  // ...existing code...\n\n  const handleSubmit = () => {\n    if (!validate()) return;\n    const payload =\n      type === \"topic\"\n        ? {\n            name: formData.name,\n            categoryId: formData.categoryId,\n            subcategoryId: formData.subcategoryId, // <-- add this\n            codebase: formData.codebase,\n            output: formData.output,\n            status: formData.status,\n            language,\n          }\n        : { name: formData.name };\n\n    onAdd(payload);\n  };\n\n  return (\n    <Modal show onHide={onClose} size=\"lg\" scrollable>\n      <Modal.Header closeButton>\n        <Modal.Title>Add {type}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>{type} Name</Form.Label>\n            <Form.Control\n              ref={inputRef}\n              type=\"text\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              isInvalid={!!errors.name}\n              placeholder={`Enter ${type} name`}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.name}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          {type === \"topic\" && (\n            <>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Category</Form.Label>\n                <Form.Select\n                  name=\"categoryId\"\n                  value={formData.categoryId}\n                  onChange={handleChange}\n                  isInvalid={!!errors.categoryId}\n                >\n                  <option value=\"\">Select Category</option>\n                  {categories.map((cat) => (\n                    <option key={cat._id} value={cat._id}>\n                      {cat.name}\n                    </option>\n                  ))}\n                </Form.Select>\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.categoryId}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/* Subcategory field */}\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Subcategory</Form.Label>\n                <Form.Select\n                  name=\"subcategoryId\"\n                  value={formData.subcategoryId}\n                  onChange={handleChange}\n                  isInvalid={!!errors.subcategoryId}\n                >\n                  <option value=\"\">Select Subcategory</option>\n                  {categories\n                    .find((cat) => cat._id === formData.categoryId)?.subcategories?.map((sub) => (\n                      <option key={sub._id} value={sub._id}>\n                        {sub.name}\n                      </option>\n                    ))}\n                </Form.Select>\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.subcategoryId}\n                </Form.Control.Feedback>\n              </Form.Group>\n              {/* End subcategory */}\n\n              {/* ...existing topic fields... */}\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Language</Form.Label>\n                <Form.Select\n                  name=\"language\"\n                  value={language}\n                  onChange={(e) => setLanguage(e.target.value)}\n                >\n                  <option value=\"javascript\">JavaScript</option>\n                  <option value=\"python\">Python</option>\n                  <option value=\"react\">React</option>\n                  <option value=\"node\">Node</option>\n                </Form.Select>\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Codebase</Form.Label>\n                <div\n                  style={{\n                    border: \"1px solid #ced4da\",\n                    borderRadius: \"0.25rem\",\n                    minHeight: \"150px\",\n                    fontFamily: \"monospace\",\n                    fontSize: 14,\n                    padding: \"10px\",\n                    backgroundColor: \"#2d2d2d\",\n                    color: \"#ccc\",\n                  }}\n                >\n                  <Editor\n                    value={formData.codebase}\n                    onValueChange={(codebase) =>\n                      setFormData((prev) => ({ ...prev, codebase }))\n                    }\n                    highlight={highlightCode}\n                    padding={10}\n                    style={{\n                      fontFamily: '\"Fira code\", monospace',\n                      fontSize: 14,\n                      outline: 0,\n                      minHeight: 140,\n                    }}\n                  />\n                </div>\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Output</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  name=\"output\"\n                  rows={2}\n                  value={formData.output}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Status</Form.Label>\n                <Form.Select\n                  name=\"status\"\n                  value={formData.status}\n                  onChange={handleChange}\n                >\n                  <option value=\"active\">Active</option>\n                  <option value=\"inactive\">Inactive</option>\n                </Form.Select>\n              </Form.Group>\n            </>\n          )}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleSubmit}>\n          Add\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n// ...existing code..."],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AACrD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,mCAAmC;AAC1C,OAAO,qCAAqC;AAC5C,OAAO,iCAAiC;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,eAAe,SAASC,QAAQA,CAAC;EAAEC,IAAI;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}