{"ast":null,"code":"var _jsxFileName = \"/home/deepak/TECH STACK/PYTHON/forum/client/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n// import React, { useState, useEffect } from \"react\";\n// import Header from \"./components/Header\";\n// import Sidebar from \"./components/Sidebar\";\n// import AddModal from \"./components/AddModal\";\n// import api from \"./services/api\";\n// import { Toast, ToastContainer, Container, Row, Col } from \"react-bootstrap\";\n\n// function App() {\n//   const [categories, setCategories] = useState([]);\n//   const [selectedCat, setSelectedCat] = useState(null);\n//   const [showAddModal, setShowAddModal] = useState(false);\n//   const [modalType, setModalType] = useState(null);\n//   const [toastMessage, setToastMessage] = useState(\"\");\n//   const [toastVariant, setToastVariant] = useState(\"success\");\n//   const [selectedTopic, setSelectedTopic] = useState(null);\n\n//   const fetchCategories = async () => {\n//     try {\n//       const res = await api.get(\"/forum\");\n//       setCategories(res.data);\n//       if (selectedCat && !res.data.find((c) => c._id === selectedCat._id)) {\n//         setSelectedCat(null);\n//       }\n//     } catch (error) {\n//       console.error(\"Failed to fetch categories:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchCategories();\n//   }, []);\n\n//   const openAddModal = (type) => {\n//     setModalType(type);\n//     setShowAddModal(true);\n//   };\n\n//   const handleAdd = async (payload) => {\n//     try {\n//       const endpoint = modalType === \"category\" ? \"/category\" : \"/topic\";\n//       const response = await api.post(endpoint, payload);\n\n//       if (modalType === \"category\") {\n//         setCategories((prev) => [...prev, response.data.category]);\n//         setToastMessage(\"Category added successfully\");\n//       } else {\n//         setToastMessage(\"Topic added successfully\");\n//       }\n\n//       setToastVariant(\"success\");\n//       setShowAddModal(false);\n//       fetchCategories(); // refresh list\n//     } catch (error) {\n//       setToastMessage(\"Failed to add \" + modalType);\n//       setToastVariant(\"danger\");\n//     }\n//   };\n\n//   const handleTopicSelect = (topic, category) => {\n//   setSelectedCat(category);\n//   setSelectedTopic(topic);\n// };\n\n//   return (\n//     <>\n//       <Header onAdd={openAddModal} />\n//       <Container fluid>\n//         <Row>\n//           <Col md={3}>\n//             <Sidebar\n//               categories={categories}\n//               onSelectCategory={setSelectedCat}\n//               onSelectTopic={handleTopicSelect}\n//             />\n//           </Col>\n//           {/* <Col md={9} className=\"p-3\">\n//             <h4>Welcome to the Forum</h4>\n//             {selectedCat ? (\n//               <div>\n//                 <h5>Topics in: {selectedCat.name}</h5>\n//                 <ul>\n//                   {(selectedCat.topics ?? []).map((topic) => (\n//                     <li key={topic._id}>{topic.name} </li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             ) : (\n//               <p>Please select a category to see topics.</p>\n//             )}\n//           </Col> */}\n//           {/* <Col md={9} className=\"p-3\">\n//             <h4>Welcome to the Forum</h4>\n//             {selectedCat ? (\n//               <div>\n//                 <h5>Topics in: {selectedCat.name}</h5>\n//                 <ul style={{ listStyleType: \"none\", padding: 0 }}>\n//                   {(selectedCat.topics ?? []).map((topic) => (\n//                     <li key={topic._id} className=\"mb-4\">\n//                       <strong>{topic.name}</strong>\n//                       <textarea\n//                         value={topic.codebase}\n//                         readOnly\n//                         rows={5}\n//                         className=\"form-control mt-2\"\n//                         style={{\n//                           fontFamily: \"monospace\",\n//                           background: \"#f8f9fa\",\n//                         }}\n//                       />\n//                     </li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             ) : (\n//               <p>Please select a category to see topics.</p>\n//             )}\n//           </Col> */}\n//           <Col md={9} className=\"p-3\">\n//             <h4>Welcome to the Forum</h4>\n//             {selectedTopic ? (\n//               <div>\n//                 <h5>{selectedTopic.name}</h5>\n//                 <textarea\n//                   value={selectedTopic.codebase}\n//                   readOnly\n//                   rows={10}\n//                   className=\"form-control\"\n//                   style={{ fontFamily: \"monospace\", background: \"#f8f9fa\" }}\n//                 />\n//               </div>\n//             ) : selectedCat ? (\n//               <div>\n//                 <h5>Topics in: {selectedCat.name}</h5>\n//                 <ul>\n//                   {(selectedCat.topics ?? []).map((topic) => (\n//                     <li key={topic._id}>{topic.name}</li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             ) : (\n//               <p>Please select a category to see topics.</p>\n//             )}\n//           </Col>\n//         </Row>\n//       </Container>\n\n//       {showAddModal && (\n//         <AddModal\n//           type={modalType}\n//           onAdd={handleAdd}\n//           onClose={() => {\n//             setShowAddModal(false);\n//             setModalType(null);\n//           }}\n//           categories={categories}\n//         />\n//       )}\n\n//       <ToastContainer position=\"bottom-end\" className=\"p-3\">\n//         <Toast\n//           bg={toastVariant}\n//           show={!!toastMessage}\n//           onClose={() => setToastMessage(\"\")}\n//           delay={3000}\n//           autohide\n//         >\n//           <Toast.Body className=\"text-white\">{toastMessage}</Toast.Body>\n//         </Toast>\n//       </ToastContainer>\n//     </>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Stack, Toast } from 'react-bootstrap';\nimport AddModal from './components/AddModal';\nimport CategoryModal from './components/modals/CategoryModal';\nimport Sidebar from './components/Sidebar';\nimport TopicView from './components/TopicView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Existing state\n  const [categories, setCategories] = useState([]);\n  const [selectedCat, setSelectedCat] = useState(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastVariant, setToastVariant] = useState(\"success\");\n  const [selectedTopic, setSelectedTopic] = useState(null);\n\n  // New state for category modal\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n  const [categoryMode, setCategoryMode] = useState('category');\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [subcategoryName, setSubcategoryName] = useState('');\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch('/api/categories');\n      const data = await response.json();\n      setCategories(data);\n    } catch (error) {\n      showToast(\"Error fetching categories\", \"danger\");\n    }\n  };\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  const showToast = (message, variant = \"success\") => {\n    setToastMessage(message);\n    setToastVariant(variant);\n  };\n  const openAddModal = type => {\n    setModalType(type);\n    setShowAddModal(true);\n  };\n\n  // New functions for category/subcategory handling\n  const openCategoryModal = (mode = 'category') => {\n    setCategoryMode(mode);\n    setCategoryName('');\n    setParentCategoryId('');\n    setSubcategoryName('');\n    setShowCategoryModal(true);\n  };\n  const handleCategorySubmit = async data => {\n    try {\n      if (data.type === 'subcategory') {\n        const response = await fetch('/api/subcategories', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: data.name,\n            parentId: data.parentId\n          })\n        });\n        const newSubcategory = await response.json();\n        setCategories(prev => prev.map(cat => cat._id === data.parentId ? {\n          ...cat,\n          subcategories: [...(cat.subcategories || []), newSubcategory]\n        } : cat));\n        showToast(\"Subcategory added successfully\");\n      } else {\n        const response = await fetch('/api/categories', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: data.name\n          })\n        });\n        const newCategory = await response.json();\n        setCategories(prev => [...prev, {\n          ...newCategory,\n          subcategories: []\n        }]);\n        showToast(\"Category added successfully\");\n      }\n      setShowCategoryModal(false);\n    } catch (error) {\n      showToast(\"Error adding category/subcategory\", \"danger\");\n    }\n  };\n  const handleAdd = async payload => {\n    try {\n      const endpoint = modalType === 'topic' ? '/api/topics' : '/api/categories';\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      if (modalType === 'topic') {\n        setCategories(prev => prev.map(cat => cat._id === payload.categoryId ? {\n          ...cat,\n          subcategories: cat.subcategories.map(sub => sub._id === payload.subcategoryId ? {\n            ...sub,\n            topics: [...(sub.topics || []), data]\n          } : sub)\n        } : cat));\n        showToast(\"Topic added successfully\");\n      }\n      setShowAddModal(false);\n    } catch (error) {\n      showToast(\"Error adding \" + modalType, \"danger\");\n    }\n  };\n  const handleTopicSelect = (topic, category) => {\n    setSelectedTopic(topic);\n    setSelectedCat(category);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          categories: categories,\n          onSelectCategory: setSelectedCat,\n          onSelectTopic: handleTopicSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"horizontal\",\n          gap: 2,\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => openCategoryModal('category'),\n            children: \"Add Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => openCategoryModal('subcategory'),\n            children: \"Add Subcategory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => openAddModal('topic'),\n            children: \"Add Topic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: selectedTopic && /*#__PURE__*/_jsxDEV(TopicView, {\n          topic: selectedTopic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddModal, {\n      show: showAddModal,\n      type: modalType,\n      onClose: () => setShowAddModal(false),\n      onAdd: handleAdd,\n      categories: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryModal, {\n      show: showCategoryModal,\n      onHide: () => setShowCategoryModal(false),\n      mode: categoryMode,\n      categoryName: categoryName,\n      onCategoryChange: setCategoryName,\n      categories: categories,\n      parentCategoryId: parentCategoryId,\n      onParentCategoryChange: setParentCategoryId,\n      subcategoryName: subcategoryName,\n      onSubcategoryChange: setSubcategoryName,\n      onSubmit: handleCategorySubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toast, {\n      show: !!toastMessage,\n      onClose: () => setToastMessage(\"\"),\n      delay: 3000,\n      autohide: true,\n      className: \"position-fixed bottom-0 end-0 m-3\",\n      bg: toastVariant,\n      children: /*#__PURE__*/_jsxDEV(Toast.Body, {\n        className: toastVariant === \"danger\" ? \"text-white\" : \"\",\n        children: toastMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XYnRN6x5qQmHRjAidNoB3Gvg3uw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Button","Stack","Toast","AddModal","CategoryModal","Sidebar","TopicView","jsxDEV","_jsxDEV","App","_s","categories","setCategories","selectedCat","setSelectedCat","showAddModal","setShowAddModal","modalType","setModalType","toastMessage","setToastMessage","toastVariant","setToastVariant","selectedTopic","setSelectedTopic","showCategoryModal","setShowCategoryModal","categoryMode","setCategoryMode","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","subcategoryName","setSubcategoryName","fetchCategories","response","fetch","data","json","error","showToast","message","variant","openAddModal","type","openCategoryModal","mode","handleCategorySubmit","method","headers","body","JSON","stringify","name","parentId","newSubcategory","prev","map","cat","_id","subcategories","newCategory","handleAdd","payload","endpoint","categoryId","sub","subcategoryId","topics","handleTopicSelect","topic","category","fluid","children","md","onSelectCategory","onSelectTopic","fileName","_jsxFileName","lineNumber","columnNumber","direction","gap","className","onClick","show","onClose","onAdd","onHide","onCategoryChange","onParentCategoryChange","onSubcategoryChange","onSubmit","delay","autohide","bg","Body","_c","$RefreshReg$"],"sources":["/home/deepak/TECH STACK/PYTHON/forum/client/src/App.js"],"sourcesContent":["// src/App.js\n// import React, { useState, useEffect } from \"react\";\n// import Header from \"./components/Header\";\n// import Sidebar from \"./components/Sidebar\";\n// import AddModal from \"./components/AddModal\";\n// import api from \"./services/api\";\n// import { Toast, ToastContainer, Container, Row, Col } from \"react-bootstrap\";\n\n// function App() {\n//   const [categories, setCategories] = useState([]);\n//   const [selectedCat, setSelectedCat] = useState(null);\n//   const [showAddModal, setShowAddModal] = useState(false);\n//   const [modalType, setModalType] = useState(null);\n//   const [toastMessage, setToastMessage] = useState(\"\");\n//   const [toastVariant, setToastVariant] = useState(\"success\");\n//   const [selectedTopic, setSelectedTopic] = useState(null);\n\n//   const fetchCategories = async () => {\n//     try {\n//       const res = await api.get(\"/forum\");\n//       setCategories(res.data);\n//       if (selectedCat && !res.data.find((c) => c._id === selectedCat._id)) {\n//         setSelectedCat(null);\n//       }\n//     } catch (error) {\n//       console.error(\"Failed to fetch categories:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchCategories();\n//   }, []);\n\n//   const openAddModal = (type) => {\n//     setModalType(type);\n//     setShowAddModal(true);\n//   };\n\n//   const handleAdd = async (payload) => {\n//     try {\n//       const endpoint = modalType === \"category\" ? \"/category\" : \"/topic\";\n//       const response = await api.post(endpoint, payload);\n\n//       if (modalType === \"category\") {\n//         setCategories((prev) => [...prev, response.data.category]);\n//         setToastMessage(\"Category added successfully\");\n//       } else {\n//         setToastMessage(\"Topic added successfully\");\n//       }\n\n//       setToastVariant(\"success\");\n//       setShowAddModal(false);\n//       fetchCategories(); // refresh list\n//     } catch (error) {\n//       setToastMessage(\"Failed to add \" + modalType);\n//       setToastVariant(\"danger\");\n//     }\n//   };\n\n//   const handleTopicSelect = (topic, category) => {\n//   setSelectedCat(category);\n//   setSelectedTopic(topic);\n// };\n\n//   return (\n//     <>\n//       <Header onAdd={openAddModal} />\n//       <Container fluid>\n//         <Row>\n//           <Col md={3}>\n//             <Sidebar\n//               categories={categories}\n//               onSelectCategory={setSelectedCat}\n//               onSelectTopic={handleTopicSelect}\n//             />\n//           </Col>\n//           {/* <Col md={9} className=\"p-3\">\n//             <h4>Welcome to the Forum</h4>\n//             {selectedCat ? (\n//               <div>\n//                 <h5>Topics in: {selectedCat.name}</h5>\n//                 <ul>\n//                   {(selectedCat.topics ?? []).map((topic) => (\n//                     <li key={topic._id}>{topic.name} </li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             ) : (\n//               <p>Please select a category to see topics.</p>\n//             )}\n//           </Col> */}\n//           {/* <Col md={9} className=\"p-3\">\n//             <h4>Welcome to the Forum</h4>\n//             {selectedCat ? (\n//               <div>\n//                 <h5>Topics in: {selectedCat.name}</h5>\n//                 <ul style={{ listStyleType: \"none\", padding: 0 }}>\n//                   {(selectedCat.topics ?? []).map((topic) => (\n//                     <li key={topic._id} className=\"mb-4\">\n//                       <strong>{topic.name}</strong>\n//                       <textarea\n//                         value={topic.codebase}\n//                         readOnly\n//                         rows={5}\n//                         className=\"form-control mt-2\"\n//                         style={{\n//                           fontFamily: \"monospace\",\n//                           background: \"#f8f9fa\",\n//                         }}\n//                       />\n//                     </li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             ) : (\n//               <p>Please select a category to see topics.</p>\n//             )}\n//           </Col> */}\n//           <Col md={9} className=\"p-3\">\n//             <h4>Welcome to the Forum</h4>\n//             {selectedTopic ? (\n//               <div>\n//                 <h5>{selectedTopic.name}</h5>\n//                 <textarea\n//                   value={selectedTopic.codebase}\n//                   readOnly\n//                   rows={10}\n//                   className=\"form-control\"\n//                   style={{ fontFamily: \"monospace\", background: \"#f8f9fa\" }}\n//                 />\n//               </div>\n//             ) : selectedCat ? (\n//               <div>\n//                 <h5>Topics in: {selectedCat.name}</h5>\n//                 <ul>\n//                   {(selectedCat.topics ?? []).map((topic) => (\n//                     <li key={topic._id}>{topic.name}</li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             ) : (\n//               <p>Please select a category to see topics.</p>\n//             )}\n//           </Col>\n//         </Row>\n//       </Container>\n\n//       {showAddModal && (\n//         <AddModal\n//           type={modalType}\n//           onAdd={handleAdd}\n//           onClose={() => {\n//             setShowAddModal(false);\n//             setModalType(null);\n//           }}\n//           categories={categories}\n//         />\n//       )}\n\n//       <ToastContainer position=\"bottom-end\" className=\"p-3\">\n//         <Toast\n//           bg={toastVariant}\n//           show={!!toastMessage}\n//           onClose={() => setToastMessage(\"\")}\n//           delay={3000}\n//           autohide\n//         >\n//           <Toast.Body className=\"text-white\">{toastMessage}</Toast.Body>\n//         </Toast>\n//       </ToastContainer>\n//     </>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Stack, Toast } from 'react-bootstrap';\nimport AddModal from './components/AddModal';\nimport CategoryModal from './components/modals/CategoryModal';\nimport Sidebar from './components/Sidebar';\nimport TopicView from './components/TopicView';\n\nfunction App() {\n  // Existing state\n  const [categories, setCategories] = useState([]);\n  const [selectedCat, setSelectedCat] = useState(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastVariant, setToastVariant] = useState(\"success\");\n  const [selectedTopic, setSelectedTopic] = useState(null);\n\n  // New state for category modal\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n  const [categoryMode, setCategoryMode] = useState('category');\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [subcategoryName, setSubcategoryName] = useState('');\n\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch('/api/categories');\n      const data = await response.json();\n      setCategories(data);\n    } catch (error) {\n      showToast(\"Error fetching categories\", \"danger\");\n    }\n  };\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  const showToast = (message, variant = \"success\") => {\n    setToastMessage(message);\n    setToastVariant(variant);\n  };\n\n  const openAddModal = (type) => {\n    setModalType(type);\n    setShowAddModal(true);\n  };\n\n  // New functions for category/subcategory handling\n  const openCategoryModal = (mode = 'category') => {\n    setCategoryMode(mode);\n    setCategoryName('');\n    setParentCategoryId('');\n    setSubcategoryName('');\n    setShowCategoryModal(true);\n  };\n\n  const handleCategorySubmit = async (data) => {\n    try {\n      if (data.type === 'subcategory') {\n        const response = await fetch('/api/subcategories', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            name: data.name,\n            parentId: data.parentId\n          })\n        });\n        const newSubcategory = await response.json();\n        \n        setCategories(prev => prev.map(cat => \n          cat._id === data.parentId\n            ? {\n                ...cat,\n                subcategories: [...(cat.subcategories || []), newSubcategory]\n              }\n            : cat\n        ));\n        showToast(\"Subcategory added successfully\");\n      } else {\n        const response = await fetch('/api/categories', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ name: data.name })\n        });\n        const newCategory = await response.json();\n        \n        setCategories(prev => [...prev, { ...newCategory, subcategories: [] }]);\n        showToast(\"Category added successfully\");\n      }\n      setShowCategoryModal(false);\n    } catch (error) {\n      showToast(\"Error adding category/subcategory\", \"danger\");\n    }\n  };\n\n  const handleAdd = async (payload) => {\n    try {\n      const endpoint = modalType === 'topic' ? '/api/topics' : '/api/categories';\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      \n      if (modalType === 'topic') {\n        setCategories(prev => prev.map(cat => \n          cat._id === payload.categoryId\n            ? {\n                ...cat,\n                subcategories: cat.subcategories.map(sub =>\n                  sub._id === payload.subcategoryId\n                    ? { ...sub, topics: [...(sub.topics || []), data] }\n                    : sub\n                )\n              }\n            : cat\n        ));\n        showToast(\"Topic added successfully\");\n      }\n      setShowAddModal(false);\n    } catch (error) {\n      showToast(\"Error adding \" + modalType, \"danger\");\n    }\n  };\n\n  const handleTopicSelect = (topic, category) => {\n    setSelectedTopic(topic);\n    setSelectedCat(category);\n  };\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col md={3}>\n          <Sidebar \n            categories={categories}\n            onSelectCategory={setSelectedCat}\n            onSelectTopic={handleTopicSelect}\n          />\n          <Stack direction=\"horizontal\" gap={2} className=\"mt-3\">\n            <Button onClick={() => openCategoryModal('category')}>\n              Add Category\n            </Button>\n            <Button onClick={() => openCategoryModal('subcategory')}>\n              Add Subcategory\n            </Button>\n            <Button onClick={() => openAddModal('topic')}>\n              Add Topic\n            </Button>\n          </Stack>\n        </Col>\n        <Col md={9}>\n          {selectedTopic && <TopicView topic={selectedTopic} />}\n        </Col>\n      </Row>\n\n      <AddModal\n        show={showAddModal}\n        type={modalType}\n        onClose={() => setShowAddModal(false)}\n        onAdd={handleAdd}\n        categories={categories}\n      />\n\n      <CategoryModal\n        show={showCategoryModal}\n        onHide={() => setShowCategoryModal(false)}\n        mode={categoryMode}\n        categoryName={categoryName}\n        onCategoryChange={setCategoryName}\n        categories={categories}\n        parentCategoryId={parentCategoryId}\n        onParentCategoryChange={setParentCategoryId}\n        subcategoryName={subcategoryName}\n        onSubcategoryChange={setSubcategoryName}\n        onSubmit={handleCategorySubmit}\n      />\n\n      <Toast\n        show={!!toastMessage}\n        onClose={() => setToastMessage(\"\")}\n        delay={3000}\n        autohide\n        className=\"position-fixed bottom-0 end-0 m-3\"\n        bg={toastVariant}\n      >\n        <Toast.Body className={toastVariant === \"danger\" ? \"text-white\" : \"\"}>\n          {toastMessage}\n        </Toast.Body>\n      </Toast>\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,QAAQ,iBAAiB;AAC3E,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,aAAa,MAAM,mCAAmC;AAC7D,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}