{"ast":null,"code":"var _jsxFileName = \"/home/deepak/TECH STACK/PYTHON/forum-app/client/src/components/AddModal.js\",\n  _s = $RefreshSig$();\n// // src/components/AddModal.js\n// import React, { useState, useEffect, useRef } from \"react\";\n// import { Modal, Button, Form, Tabs, Tab } from \"react-bootstrap\";\n// import Editor from \"react-simple-code-editor\";\n// import Prism from \"prismjs\";\n\n// // Import the CSS for Prism themes (choose one)\n// import \"prismjs/themes/prism-tomorrow.css\";\n\n// // Import Prism languages you want to support\n// import \"prismjs/components/prism-javascript\";\n// import \"prismjs/components/prism-python\";\n\n// export default function AddModal({ type, onAdd, onClose, categories = [] }) {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     categoryId: \"\",\n//     codebase: \"\",\n//     output: \"\",\n//     status: \"active\",\n//   });\n//   const [language, setLanguage] = useState(\"javascript\");\n//   const [errors, setErrors] = useState({});\n//   const inputRef = useRef(null);\n\n//   useEffect(() => {\n//     if (inputRef.current) inputRef.current.focus();\n//   }, []);\n\n//   const validate = () => {\n//     const newErrors = {};\n//     if (!formData.name.trim()) newErrors.name = \"Name is required\";\n//     if (type === \"topic\" && !formData.categoryId)\n//       newErrors.categoryId = \"Category is required\";\n//     setErrors(newErrors);\n//     return Object.keys(newErrors).length === 0;\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({\n//       ...prev,\n//       [name]: value,\n//     }));\n//   };\n\n//   // Syntax highlighter for react-simple-code-editor\n//   const highlightCode = (code) =>\n//     Prism.highlight(code, Prism.languages[language], language);\n\n//   const handleSubmit = () => {\n//     if (!validate()) return;\n//     const payload =\n//       type === \"topic\"\n//         ? {\n//             name: formData.name,\n//             categoryId: formData.categoryId,\n//             codebase: formData.codebase,\n//             output: formData.output,\n//             status: formData.status,\n//             language,\n//           }\n//         : { name: formData.name };\n\n//     onAdd(payload);\n//   };\n\n//   return (\n//     <Modal show onHide={onClose} size=\"lg\" scrollable>\n//       <Modal.Header closeButton>\n//         <Modal.Title>Add {type}</Modal.Title>\n//       </Modal.Header>\n//       <Modal.Body>\n//         <Form>\n//           <Form.Group controlId=\"formName\" className=\"mb-3\">\n//             <Form.Label>{type} Name</Form.Label>\n//             <Form.Control\n//               ref={inputRef}\n//               type=\"text\"\n//               name=\"name\"\n//               value={formData.name}\n//               onChange={handleChange}\n//               placeholder={`Enter ${type} name`}\n//               isInvalid={!!errors.name}\n//               autoFocus\n//             />\n//             <Form.Control.Feedback type=\"invalid\">\n//               {errors.name}\n//             </Form.Control.Feedback>\n//           </Form.Group>\n\n//           {type === \"topic\" && (\n//             <>\n//               <Form.Group controlId=\"formCategoryId\" className=\"mb-3\">\n//                 <Form.Label>Category</Form.Label>\n//                 <Form.Select\n//                   name=\"categoryId\"\n//                   value={formData.categoryId}\n//                   onChange={handleChange}\n//                   isInvalid={!!errors.categoryId}\n//                 >\n//                   <option value=\"\">Select Category</option>\n//                   {categories.map((cat) => (\n//                     <option key={cat._id} value={cat._id}>\n//                       {cat.name}\n//                     </option>\n//                   ))}\n//                 </Form.Select>\n//                 <Form.Control.Feedback type=\"invalid\">\n//                   {errors.categoryId}\n//                 </Form.Control.Feedback>\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formLanguage\" className=\"mb-3\">\n//                 <Form.Label>Language</Form.Label>\n//                 <Form.Select\n//                   name=\"language\"\n//                   value={language}\n//                   onChange={(e) => setLanguage(e.target.value)}\n//                 >\n//                   <option value=\"python\">Python</option>\n//                   <option value=\"javascript\">JavaScript DSA</option>\n//                   <option value=\"react\">React JS</option>\n//                   <option value=\"node\">Node JS</option>\n//                   <option value=\"ml\">Machine Learning</option>\n//                   <option value=\"ai\">Artificial Intelligence</option>\n//                 </Form.Select>\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formCodebase\" className=\"mb-3\">\n//                 <Form.Label>Codebase</Form.Label>\n//                 <div\n//                   style={{\n//                     border: \"1px solid #ced4da\",\n//                     borderRadius: \"0.25rem\",\n//                     minHeight: \"150px\",\n//                     fontFamily: \"monospace\",\n//                     fontSize: 14,\n//                     padding: \"10px\",\n//                     backgroundColor: \"#2d2d2d\",\n//                     color: \"#ccc\",\n//                     overflow: \"auto\",\n//                   }}\n//                 >\n//                   <Editor\n//                     value={formData.codebase}\n//                     onValueChange={(codebase) =>\n//                       setFormData((prev) => ({ ...prev, codebase }))\n//                     }\n//                     highlight={highlightCode}\n//                     padding={10}\n//                     style={{\n//                       fontFamily: '\"Fira code\", monospace',\n//                       fontSize: 14,\n//                       outline: 0,\n//                       minHeight: 140,\n//                     }}\n//                   />\n//                 </div>\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formOutput\" className=\"mb-3\">\n//                 <Form.Label>Output</Form.Label>\n//                 <Form.Control\n//                   as=\"textarea\"\n//                   rows={2}\n//                   name=\"output\"\n//                   value={formData.output}\n//                   onChange={handleChange}\n//                   placeholder=\"Enter output of code\"\n//                 />\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formStatus\" className=\"mb-3\">\n//                 <Form.Label>Status</Form.Label>\n//                 <Form.Select\n//                   name=\"status\"\n//                   value={formData.status}\n//                   onChange={handleChange}\n//                 >\n//                   <option value=\"active\">Active</option>\n//                   <option value=\"inactive\">Inactive</option>\n//                 </Form.Select>\n//               </Form.Group>\n//             </>\n//           )}\n//         </Form>\n//       </Modal.Body>\n//       <Modal.Footer>\n//         <Button variant=\"secondary\" onClick={onClose}>\n//           Cancel\n//         </Button>\n//         <Button variant=\"primary\" onClick={handleSubmit}>\n//           Add\n//         </Button>\n//       </Modal.Footer>\n//     </Modal>\n//   );\n// }\n\n// Inside AddModal.js for topic form\n// src/components/AddModal.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport Editor from \"react-simple-code-editor\";\nimport Prism from \"prismjs\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport \"prismjs/components/prism-javascript\";\nimport \"prismjs/components/prism-python\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddModal({\n  type,\n  onAdd,\n  onClose,\n  categories = []\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    categoryId: \"\",\n    language: \"javascript\",\n    codebase: \"\",\n    output: \"\",\n    status: \"active\"\n  });\n  const [errors, setErrors] = useState({});\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (inputRef.current) inputRef.current.focus();\n  }, []);\n  const highlightCode = code => Prism.highlight(code, Prism.languages[formData.language], formData.language);\n  const validate = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) newErrors.name = \"Name is required\";\n    if (!formData.categoryId) newErrors.categoryId = \"Category is required\";\n    return newErrors;\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = () => {\n    const newErrors = validate();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    onAdd(formData);\n  };\n  if (type !== \"topic\") return null;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: true,\n    onHide: onClose,\n    size: \"lg\",\n    scrollable: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Add Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Topic Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            ref: inputRef,\n            type: \"text\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleChange,\n            isInvalid: !!errors.name,\n            placeholder: \"Enter topic name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            name: \"categoryId\",\n            value: formData.categoryId,\n            onChange: handleChange,\n            isInvalid: !!errors.categoryId,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat._id,\n              children: cat.name\n            }, cat._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.categoryId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            name: \"language\",\n            value: formData.language,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"javascript\",\n              children: \"JavaScript\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"python\",\n              children: \"Python\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"react\",\n              children: \"React\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"node\",\n              children: \"Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ml\",\n              children: \"ML\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ai\",\n              children: \"AI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Codebase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: \"#2d2d2d\",\n              borderRadius: \"5px\",\n              padding: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Editor, {\n              value: formData.codebase,\n              onValueChange: codebase => setFormData(prev => ({\n                ...prev,\n                codebase\n              })),\n              highlight: highlightCode,\n              padding: 10,\n              style: {\n                color: \"#ccc\",\n                fontFamily: \"monospace\",\n                minHeight: 120\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Output\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            name: \"output\",\n            rows: 2,\n            value: formData.output,\n            onChange: handleChange,\n            placeholder: \"Enter expected output\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            name: \"status\",\n            value: formData.status,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"active\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"inactive\",\n              children: \"Inactive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleSubmit,\n        children: \"Add Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n}\n_s(AddModal, \"7e5tszt7GcItKEqY7IctjKhEWOg=\");\n_c = AddModal;\nvar _c;\n$RefreshReg$(_c, \"AddModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Modal","Button","Form","Editor","Prism","jsxDEV","_jsxDEV","AddModal","type","onAdd","onClose","categories","_s","formData","setFormData","name","categoryId","language","codebase","output","status","errors","setErrors","inputRef","current","focus","highlightCode","code","highlight","languages","validate","newErrors","trim","handleChange","e","value","target","prev","handleSubmit","Object","keys","length","show","onHide","size","scrollable","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Group","className","Label","Control","ref","onChange","isInvalid","placeholder","Feedback","Select","map","cat","_id","style","background","borderRadius","padding","onValueChange","color","fontFamily","minHeight","as","rows","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/home/deepak/TECH STACK/PYTHON/forum-app/client/src/components/AddModal.js"],"sourcesContent":["// // src/components/AddModal.js\n// import React, { useState, useEffect, useRef } from \"react\";\n// import { Modal, Button, Form, Tabs, Tab } from \"react-bootstrap\";\n// import Editor from \"react-simple-code-editor\";\n// import Prism from \"prismjs\";\n\n// // Import the CSS for Prism themes (choose one)\n// import \"prismjs/themes/prism-tomorrow.css\";\n\n// // Import Prism languages you want to support\n// import \"prismjs/components/prism-javascript\";\n// import \"prismjs/components/prism-python\";\n\n// export default function AddModal({ type, onAdd, onClose, categories = [] }) {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     categoryId: \"\",\n//     codebase: \"\",\n//     output: \"\",\n//     status: \"active\",\n//   });\n//   const [language, setLanguage] = useState(\"javascript\");\n//   const [errors, setErrors] = useState({});\n//   const inputRef = useRef(null);\n\n//   useEffect(() => {\n//     if (inputRef.current) inputRef.current.focus();\n//   }, []);\n\n//   const validate = () => {\n//     const newErrors = {};\n//     if (!formData.name.trim()) newErrors.name = \"Name is required\";\n//     if (type === \"topic\" && !formData.categoryId)\n//       newErrors.categoryId = \"Category is required\";\n//     setErrors(newErrors);\n//     return Object.keys(newErrors).length === 0;\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({\n//       ...prev,\n//       [name]: value,\n//     }));\n//   };\n\n//   // Syntax highlighter for react-simple-code-editor\n//   const highlightCode = (code) =>\n//     Prism.highlight(code, Prism.languages[language], language);\n\n//   const handleSubmit = () => {\n//     if (!validate()) return;\n//     const payload =\n//       type === \"topic\"\n//         ? {\n//             name: formData.name,\n//             categoryId: formData.categoryId,\n//             codebase: formData.codebase,\n//             output: formData.output,\n//             status: formData.status,\n//             language,\n//           }\n//         : { name: formData.name };\n\n//     onAdd(payload);\n//   };\n\n//   return (\n//     <Modal show onHide={onClose} size=\"lg\" scrollable>\n//       <Modal.Header closeButton>\n//         <Modal.Title>Add {type}</Modal.Title>\n//       </Modal.Header>\n//       <Modal.Body>\n//         <Form>\n//           <Form.Group controlId=\"formName\" className=\"mb-3\">\n//             <Form.Label>{type} Name</Form.Label>\n//             <Form.Control\n//               ref={inputRef}\n//               type=\"text\"\n//               name=\"name\"\n//               value={formData.name}\n//               onChange={handleChange}\n//               placeholder={`Enter ${type} name`}\n//               isInvalid={!!errors.name}\n//               autoFocus\n//             />\n//             <Form.Control.Feedback type=\"invalid\">\n//               {errors.name}\n//             </Form.Control.Feedback>\n//           </Form.Group>\n\n//           {type === \"topic\" && (\n//             <>\n//               <Form.Group controlId=\"formCategoryId\" className=\"mb-3\">\n//                 <Form.Label>Category</Form.Label>\n//                 <Form.Select\n//                   name=\"categoryId\"\n//                   value={formData.categoryId}\n//                   onChange={handleChange}\n//                   isInvalid={!!errors.categoryId}\n//                 >\n//                   <option value=\"\">Select Category</option>\n//                   {categories.map((cat) => (\n//                     <option key={cat._id} value={cat._id}>\n//                       {cat.name}\n//                     </option>\n//                   ))}\n//                 </Form.Select>\n//                 <Form.Control.Feedback type=\"invalid\">\n//                   {errors.categoryId}\n//                 </Form.Control.Feedback>\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formLanguage\" className=\"mb-3\">\n//                 <Form.Label>Language</Form.Label>\n//                 <Form.Select\n//                   name=\"language\"\n//                   value={language}\n//                   onChange={(e) => setLanguage(e.target.value)}\n//                 >\n//                   <option value=\"python\">Python</option>\n//                   <option value=\"javascript\">JavaScript DSA</option>\n//                   <option value=\"react\">React JS</option>\n//                   <option value=\"node\">Node JS</option>\n//                   <option value=\"ml\">Machine Learning</option>\n//                   <option value=\"ai\">Artificial Intelligence</option>\n//                 </Form.Select>\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formCodebase\" className=\"mb-3\">\n//                 <Form.Label>Codebase</Form.Label>\n//                 <div\n//                   style={{\n//                     border: \"1px solid #ced4da\",\n//                     borderRadius: \"0.25rem\",\n//                     minHeight: \"150px\",\n//                     fontFamily: \"monospace\",\n//                     fontSize: 14,\n//                     padding: \"10px\",\n//                     backgroundColor: \"#2d2d2d\",\n//                     color: \"#ccc\",\n//                     overflow: \"auto\",\n//                   }}\n//                 >\n//                   <Editor\n//                     value={formData.codebase}\n//                     onValueChange={(codebase) =>\n//                       setFormData((prev) => ({ ...prev, codebase }))\n//                     }\n//                     highlight={highlightCode}\n//                     padding={10}\n//                     style={{\n//                       fontFamily: '\"Fira code\", monospace',\n//                       fontSize: 14,\n//                       outline: 0,\n//                       minHeight: 140,\n//                     }}\n//                   />\n//                 </div>\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formOutput\" className=\"mb-3\">\n//                 <Form.Label>Output</Form.Label>\n//                 <Form.Control\n//                   as=\"textarea\"\n//                   rows={2}\n//                   name=\"output\"\n//                   value={formData.output}\n//                   onChange={handleChange}\n//                   placeholder=\"Enter output of code\"\n//                 />\n//               </Form.Group>\n\n//               <Form.Group controlId=\"formStatus\" className=\"mb-3\">\n//                 <Form.Label>Status</Form.Label>\n//                 <Form.Select\n//                   name=\"status\"\n//                   value={formData.status}\n//                   onChange={handleChange}\n//                 >\n//                   <option value=\"active\">Active</option>\n//                   <option value=\"inactive\">Inactive</option>\n//                 </Form.Select>\n//               </Form.Group>\n//             </>\n//           )}\n//         </Form>\n//       </Modal.Body>\n//       <Modal.Footer>\n//         <Button variant=\"secondary\" onClick={onClose}>\n//           Cancel\n//         </Button>\n//         <Button variant=\"primary\" onClick={handleSubmit}>\n//           Add\n//         </Button>\n//       </Modal.Footer>\n//     </Modal>\n//   );\n// }\n\n\n// Inside AddModal.js for topic form\n// src/components/AddModal.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport Editor from \"react-simple-code-editor\";\nimport Prism from \"prismjs\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport \"prismjs/components/prism-javascript\";\nimport \"prismjs/components/prism-python\";\n\nexport default function AddModal({ type, onAdd, onClose, categories = [] }) {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    categoryId: \"\",\n    language: \"javascript\",\n    codebase: \"\",\n    output: \"\",\n    status: \"active\",\n  });\n\n  const [errors, setErrors] = useState({});\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    if (inputRef.current) inputRef.current.focus();\n  }, []);\n\n  const highlightCode = (code) =>\n    Prism.highlight(code, Prism.languages[formData.language], formData.language);\n\n  const validate = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) newErrors.name = \"Name is required\";\n    if (!formData.categoryId) newErrors.categoryId = \"Category is required\";\n    return newErrors;\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = () => {\n    const newErrors = validate();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    onAdd(formData);\n  };\n\n  if (type !== \"topic\") return null;\n\n  return (\n    <Modal show onHide={onClose} size=\"lg\" scrollable>\n      <Modal.Header closeButton>\n        <Modal.Title>Add Topic</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Topic Name</Form.Label>\n            <Form.Control\n              ref={inputRef}\n              type=\"text\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              isInvalid={!!errors.name}\n              placeholder=\"Enter topic name\"\n            />\n            <Form.Control.Feedback type=\"invalid\">{errors.name}</Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Category</Form.Label>\n            <Form.Select\n              name=\"categoryId\"\n              value={formData.categoryId}\n              onChange={handleChange}\n              isInvalid={!!errors.categoryId}\n            >\n              <option value=\"\">Select Category</option>\n              {categories.map((cat) => (\n                <option key={cat._id} value={cat._id}>\n                  {cat.name}\n                </option>\n              ))}\n            </Form.Select>\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.categoryId}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Language</Form.Label>\n            <Form.Select name=\"language\" value={formData.language} onChange={handleChange}>\n              <option value=\"javascript\">JavaScript</option>\n              <option value=\"python\">Python</option>\n              <option value=\"react\">React</option>\n              <option value=\"node\">Node</option>\n              <option value=\"ml\">ML</option>\n              <option value=\"ai\">AI</option>\n            </Form.Select>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Codebase</Form.Label>\n            <div style={{ background: \"#2d2d2d\", borderRadius: \"5px\", padding: \"10px\" }}>\n              <Editor\n                value={formData.codebase}\n                onValueChange={(codebase) =>\n                  setFormData((prev) => ({ ...prev, codebase }))\n                }\n                highlight={highlightCode}\n                padding={10}\n                style={{ color: \"#ccc\", fontFamily: \"monospace\", minHeight: 120 }}\n              />\n            </div>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Output</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              name=\"output\"\n              rows={2}\n              value={formData.output}\n              onChange={handleChange}\n              placeholder=\"Enter expected output\"\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Status</Form.Label>\n            <Form.Select name=\"status\" value={formData.status} onChange={handleChange}>\n              <option value=\"active\">Active</option>\n              <option value=\"inactive\">Inactive</option>\n            </Form.Select>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleSubmit}>\n          Add Topic\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AACrD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,mCAAmC;AAC1C,OAAO,qCAAqC;AAC5C,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}