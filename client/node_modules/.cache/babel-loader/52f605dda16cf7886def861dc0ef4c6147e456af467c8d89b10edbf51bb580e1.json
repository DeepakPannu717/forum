{"ast":null,"code":"var _jsxFileName = \"/home/deepak/TECH STACK/PYTHON/forum-app/client/src/components/Header.js\",\n  _s = $RefreshSig$();\n// src/components/Header.js\nimport React from 'react';\nimport { useState } from 'react';\nimport { Navbar, Nav, Button, Container } from 'react-bootstrap';\nimport AddModal from './AddModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header({\n  onAdd\n}) {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const handleAdd = async data => {\n    console.log(\"Data from modal:\", data);\n\n    // Example: Call API to add a category\n    const response = await fetch('http://localhost:5000/category', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    const result = await response.json();\n    console.log('API response:', result);\n\n    // Close modal after successful addition\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"bg-primary text-white p-3 d-flex justify-content-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forum App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-light\",\n      onClick: () => setShowModal(true),\n      children: \"Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(AddModal, {\n      type: \"category\" // optional, if your modal handles different types\n      ,\n      onClose: () => setShowModal(false),\n      onAdd: handleAdd // <- THIS IS THE FIX\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"uVlnG5KLfXemZk5i5Fl+Cg356FU=\");\n_c = Header;\n;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","Navbar","Nav","Button","Container","AddModal","jsxDEV","_jsxDEV","Header","onAdd","_s","showModal","setShowModal","handleAdd","data","console","log","response","fetch","method","headers","body","JSON","stringify","result","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onClose","_c","$RefreshReg$"],"sources":["/home/deepak/TECH STACK/PYTHON/forum-app/client/src/components/Header.js"],"sourcesContent":["// src/components/Header.js\nimport React from 'react';\nimport { useState } from 'react';\nimport { Navbar, Nav, Button, Container } from 'react-bootstrap';\nimport AddModal from './AddModal';\n\n\nexport default function Header({ onAdd }) {\n  const [showModal, setShowModal] = useState(false);\n    const handleAdd = async (data) => {\n    console.log(\"Data from modal:\", data);\n\n    // Example: Call API to add a category\n    const response = await fetch('http://localhost:5000/category', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data),\n    });\n\n    const result = await response.json();\n    console.log('API response:', result);\n\n    // Close modal after successful addition\n    setShowModal(false);\n  };\n\n    return (\n    <header className=\"bg-primary text-white p-3 d-flex justify-content-between\">\n      <h2>Forum App</h2>\n      <button className=\"btn btn-light\" onClick={() => setShowModal(true)}>Add Category</button>\n\n      {showModal && (\n        <AddModal\n          type=\"category\"           // optional, if your modal handles different types\n          onClose={() => setShowModal(false)}\n          onAdd={handleAdd}         // <- THIS IS THE FIX\n        />\n      )}\n    </header>\n  );\n};\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,GAAG,EAAEC,MAAM,EAAEC,SAAS,QAAQ,iBAAiB;AAChE,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,eAAe,SAASC,MAAMA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMa,SAAS,GAAG,MAAOC,IAAI,IAAK;IAClCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC;;IAErC;IACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI;IAC3B,CAAC,CAAC;IAEF,MAAMU,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACpCV,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEQ,MAAM,CAAC;;IAEpC;IACAZ,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAEC,oBACAL,OAAA;IAAQmB,SAAS,EAAC,0DAA0D;IAAAC,QAAA,gBAC1EpB,OAAA;MAAAoB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBxB,OAAA;MAAQmB,SAAS,EAAC,eAAe;MAACM,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAAC,IAAI,CAAE;MAAAe,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEzFpB,SAAS,iBACRJ,OAAA,CAACF,QAAQ;MACP4B,IAAI,EAAC,UAAU,CAAW;MAAA;MAC1BC,OAAO,EAAEA,CAAA,KAAMtB,YAAY,CAAC,KAAK,CAAE;MACnCH,KAAK,EAAEI,SAAU,CAAS;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb;AAACrB,EAAA,CAjCuBF,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAiC7B;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}