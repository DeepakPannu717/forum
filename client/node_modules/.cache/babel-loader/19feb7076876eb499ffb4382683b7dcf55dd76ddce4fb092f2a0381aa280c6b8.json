{"ast":null,"code":"var _jsxFileName = \"/home/deepak/TECH STACK/PYTHON/forum-app/client/src/App.js\",\n  _s = $RefreshSig$();\n// // src/App.js\n// import React, { useState, useEffect } from \"react\";\n// import Header from \"./components/Header\";\n// import Sidebar from \"./components/Sidebar\";\n// import AddModal from \"./components/AddModal\";\n// import { Toast, ToastContainer, Container, Row, Col } from \"react-bootstrap\";\n\n// function App() {\n//   const [categories, setCategories] = useState([]);\n//   const [selectedCat, setSelectedCat] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n//   const [modalType, setModalType] = useState(null);\n//   const [toastMessage, setToastMessage] = useState(\"\");\n//   const [showToast, setShowToast] = useState(false);\n\n//   const fetchCategories = async () => {\n//     try {\n//       const res = await fetch(\"http://localhost:5000/forum\");\n//       const data = await res.json();\n//       setCategories(data);\n//       // Reset selected category if it no longer exists\n//       if (selectedCat && !data.find((c) => c._id === selectedCat._id)) {\n//         setSelectedCat(null);\n//       }\n//     } catch (error) {\n//       console.error(\"Failed to fetch categories:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchCategories();\n//   }, []);\n\n//   const handleAdd = (type) => {\n//     setModalType(type);\n//     setShowModal(true);\n//   };\n\n//  // Inside your handleSubmit in App.js or AddModal.js\n\n// const handleSubmit = async (formData) => {\n//   // formData = {\n//   //   name, categoryId, language, codebase, output, status\n//   // }\n//   try {\n//     const response = await fetch(\"http://localhost:5000/topic\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(formData),\n//     });\n\n//     if (!response.ok) {\n//       const err = await response.json();\n//       throw new Error(err.error || \"Something went wrong\");\n//     }\n\n//     const result = await response.json();\n//     // success toast or actions here\n//   } catch (error) {\n//     // show error toast\n//   }\n// };\n\n//   return (\n//     <>\n//       <Header onAdd={handleAdd} />\n//       <Container fluid>\n//         <Row>\n//           <Col md={3}>\n//             <Sidebar categories={categories} onSelectCategory={setSelectedCat} />\n//           </Col>\n//           <Col md={9} className=\"p-3\">\n//             <h4>Welcome to the Forum</h4>\n//             {selectedCat ? (\n//               <div>\n//                 <h5>Topics in: {selectedCat.name}</h5>\n//                 <ul>\n//                   {(selectedCat.topics ?? []).map((topic) => (\n//                     <li key={topic._id}>{topic.name}</li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             ) : (\n//               <p>Please select a category to see topics.</p>\n//             )}\n//           </Col>\n//         </Row>\n//       </Container>\n\n//       {showModal && (\n//         <AddModal\n//           type={modalType}\n//           onAdd={handleSubmit}\n//           onClose={() => {\n//             setShowModal(false);\n//             setModalType(null);\n//           }}\n//           categories={categories}\n//         />\n//       )}\n\n//       <ToastContainer position=\"top-end\" className=\"p-3\">\n//         <Toast\n//           onClose={() => setShowToast(false)}\n//           show={showToast}\n//           delay={3000}\n//           autohide\n//           bg=\"success\"\n//         >\n//           <Toast.Header closeButton={false}>\n//             <strong className=\"me-auto\">Forum App</strong>\n//           </Toast.Header>\n//           <Toast.Body className=\"text-white\">{toastMessage}</Toast.Body>\n//         </Toast>\n//       </ToastContainer>\n//     </>\n//   );\n// }\n\n// export default App;\n// src/App.js\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport AddModal from \"./components/AddModal\";\nimport * as api from \"./services/api\"; // Ensure you have addCategory and addTopic\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [modalType, setModalType] = useState(null);\n\n  // Fetch categories\n  const fetchCategories = useCallback(async () => {\n    try {\n      const data = await api.getCategories();\n      setCategories(data);\n    } catch (error) {\n      console.error(\"Failed to fetch categories\", error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchCategories();\n  }, [fetchCategories]);\n  const handleAddClick = type => {\n    setModalType(type);\n  };\n  const handleCloseModal = () => {\n    setModalType(null);\n  };\n  const handleAdd = async data => {\n    try {\n      if (modalType === \"category\") {\n        await api.addCategory(data);\n        fetchCategories();\n      } else if (modalType === \"topic\") {\n        await api.addTopic(data);\n        // Optional: refresh topics here\n      }\n      handleCloseModal();\n    } catch (err) {\n      console.error(\"Error adding item:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Forum Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAddClick(\"category\"),\n      children: \"Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAddClick(\"topic\"),\n      children: \"Add Topic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), modalType && /*#__PURE__*/_jsxDEV(AddModal, {\n      type: modalType,\n      onAdd: handleAdd,\n      onClose: handleCloseModal,\n      categories: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oWjT5Hdja7bVk3/YytbzU1OodyI=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","AddModal","api","jsxDEV","_jsxDEV","App","_s","categories","setCategories","modalType","setModalType","fetchCategories","data","getCategories","error","console","handleAddClick","type","handleCloseModal","handleAdd","addCategory","addTopic","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAdd","onClose","_c","$RefreshReg$"],"sources":["/home/deepak/TECH STACK/PYTHON/forum-app/client/src/App.js"],"sourcesContent":["// // src/App.js\n// import React, { useState, useEffect } from \"react\";\n// import Header from \"./components/Header\";\n// import Sidebar from \"./components/Sidebar\";\n// import AddModal from \"./components/AddModal\";\n// import { Toast, ToastContainer, Container, Row, Col } from \"react-bootstrap\";\n\n// function App() {\n//   const [categories, setCategories] = useState([]);\n//   const [selectedCat, setSelectedCat] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n//   const [modalType, setModalType] = useState(null);\n//   const [toastMessage, setToastMessage] = useState(\"\");\n//   const [showToast, setShowToast] = useState(false);\n\n//   const fetchCategories = async () => {\n//     try {\n//       const res = await fetch(\"http://localhost:5000/forum\");\n//       const data = await res.json();\n//       setCategories(data);\n//       // Reset selected category if it no longer exists\n//       if (selectedCat && !data.find((c) => c._id === selectedCat._id)) {\n//         setSelectedCat(null);\n//       }\n//     } catch (error) {\n//       console.error(\"Failed to fetch categories:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchCategories();\n//   }, []);\n\n//   const handleAdd = (type) => {\n//     setModalType(type);\n//     setShowModal(true);\n//   };\n\n//  // Inside your handleSubmit in App.js or AddModal.js\n\n// const handleSubmit = async (formData) => {\n//   // formData = {\n//   //   name, categoryId, language, codebase, output, status\n//   // }\n//   try {\n//     const response = await fetch(\"http://localhost:5000/topic\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(formData),\n//     });\n\n//     if (!response.ok) {\n//       const err = await response.json();\n//       throw new Error(err.error || \"Something went wrong\");\n//     }\n\n//     const result = await response.json();\n//     // success toast or actions here\n//   } catch (error) {\n//     // show error toast\n//   }\n// };\n\n\n//   return (\n//     <>\n//       <Header onAdd={handleAdd} />\n//       <Container fluid>\n//         <Row>\n//           <Col md={3}>\n//             <Sidebar categories={categories} onSelectCategory={setSelectedCat} />\n//           </Col>\n//           <Col md={9} className=\"p-3\">\n//             <h4>Welcome to the Forum</h4>\n//             {selectedCat ? (\n//               <div>\n//                 <h5>Topics in: {selectedCat.name}</h5>\n//                 <ul>\n//                   {(selectedCat.topics ?? []).map((topic) => (\n//                     <li key={topic._id}>{topic.name}</li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             ) : (\n//               <p>Please select a category to see topics.</p>\n//             )}\n//           </Col>\n//         </Row>\n//       </Container>\n\n//       {showModal && (\n//         <AddModal\n//           type={modalType}\n//           onAdd={handleSubmit}\n//           onClose={() => {\n//             setShowModal(false);\n//             setModalType(null);\n//           }}\n//           categories={categories}\n//         />\n//       )}\n\n//       <ToastContainer position=\"top-end\" className=\"p-3\">\n//         <Toast\n//           onClose={() => setShowToast(false)}\n//           show={showToast}\n//           delay={3000}\n//           autohide\n//           bg=\"success\"\n//         >\n//           <Toast.Header closeButton={false}>\n//             <strong className=\"me-auto\">Forum App</strong>\n//           </Toast.Header>\n//           <Toast.Body className=\"text-white\">{toastMessage}</Toast.Body>\n//         </Toast>\n//       </ToastContainer>\n//     </>\n//   );\n// }\n\n// export default App;\n// src/App.js\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport AddModal from \"./components/AddModal\";\nimport * as api from \"./services/api\"; // Ensure you have addCategory and addTopic\nimport \"./App.css\";\n\nexport default function App() {\n  const [categories, setCategories] = useState([]);\n  const [modalType, setModalType] = useState(null);\n\n  // Fetch categories\n  const fetchCategories = useCallback(async () => {\n    try {\n      const data = await api.getCategories();\n      setCategories(data);\n    } catch (error) {\n      console.error(\"Failed to fetch categories\", error);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchCategories();\n  }, [fetchCategories]);\n\n  const handleAddClick = (type) => {\n    setModalType(type);\n  };\n\n  const handleCloseModal = () => {\n    setModalType(null);\n  };\n\n  const handleAdd = async (data) => {\n    try {\n      if (modalType === \"category\") {\n        await api.addCategory(data);\n        fetchCategories();\n      } else if (modalType === \"topic\") {\n        await api.addTopic(data);\n        // Optional: refresh topics here\n      }\n      handleCloseModal();\n    } catch (err) {\n      console.error(\"Error adding item:\", err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Forum Manager</h1>\n\n      <button onClick={() => handleAddClick(\"category\")}>Add Category</button>\n      <button onClick={() => handleAddClick(\"topic\")}>Add Topic</button>\n\n      {modalType && (\n        <AddModal\n          type={modalType}\n          onAdd={handleAdd}\n          onClose={handleCloseModal}\n          categories={categories}\n        />\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}